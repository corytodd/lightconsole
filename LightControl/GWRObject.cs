using System.Collections.Generic;

namespace LightControl
{
    /// <summary>
    /// Generated by http://json2csharp.com/
    /// </summary>
    public class Other
    {
        public string rcgroup { get; set; }
        public string manufacturer { get; set; }
        public string capability { get; set; }
        public string bulbpower { get; set; }
    }

    public class Device
    {
        public string did { get; set; }
        public string known { get; set; }
        public string @lock { get; set; }
        public string state { get; set; }
        public string level { get; set; }
        public string node { get; set; }
        public string port { get; set; }
        public string nodetype { get; set; }
        public string name { get; set; }
        public string desc { get; set; }
        public string colorid { get; set; }
        public string type { get; set; }
        public string rangemin { get; set; }
        public string rangemax { get; set; }
        public string power { get; set; }
        public string poweravg { get; set; }
        public string energy { get; set; }
        public string score { get; set; }
        public string productid { get; set; }
        public string prodbrand { get; set; }
        public string prodmodel { get; set; }
        public string prodtype { get; set; }
        public string prodtypeid { get; set; }
        public string classid { get; set; }
        public string @class { get; set; }
        public string subclassid { get; set; }
        public string subclass { get; set; }
        public Other other { get; set; }
    }

    public class Room
    {
        public string rid { get; set; }
        public string name { get; set; }
        public string desc { get; set; }
        public string known { get; set; }
        public string type { get; set; }
        public string color { get; set; }
        public string colorid { get; set; }
        public string img { get; set; }
        public string power { get; set; }
        public string poweravg { get; set; }
        public string energy { get; set; }
        public Device device { get; set; }

        /// <summary>
        /// Objects are equal only if rid and name are the same
        /// </summary>
        /// <param name="obj"></param>
        /// <returns></returns>
        public override bool Equals(object obj)
        {
            if (obj == null || GetType() != obj.GetType())
                return false;

            Room p = (Room)obj;
            return (rid == p.rid) && (name.Equals(p.name));
        }

        /// <summary>
        /// Use default hash code for now
        /// </summary>
        /// <returns></returns>
        public override int GetHashCode()
        {
            return base.GetHashCode();
        }
    }

    public class Gip
    {
        public string version { get; set; }
        public string rc { get; set; }
        public List<Room> room { get; set; }
    }

    public class Gdata
    {
        public Gip gip { get; set; }
    }

    public class Gwrcmd
    {
        public string gcmd { get; set; }
        public Gdata gdata { get; set; }
    }

    public class Gwrcmds
    {
        public Gwrcmd gwrcmd { get; set; }
    }

    public class GWRObject
    {
        public Gwrcmds gwrcmds { get; set; }

        /// <summary>
        /// Returns true if the rooms record is intact
        /// </summary>
        /// <returns></returns>
        public bool hasRooms()
        {
            // Ask for fogiveness, not permission
            try
            {
                var count = gwrcmds.gwrcmd.gdata.gip.room.Count;
                return true;
            }
            catch
            {
                return false;
            }
        }
    }
}
